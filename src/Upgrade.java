
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Galaxy1
 */
public class Upgrade extends javax.swing.JFrame {
    
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    /**
     * Creates new form Upgrade
     */
    public Upgrade() {
        initComponents();
        conn = JavaConnect.ConnecrDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     public void close(){
        WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        management = new javax.swing.JCheckBox();
        operationalResearch = new javax.swing.JCheckBox();
        computerNetworks = new javax.swing.JCheckBox();
        computerGraphics = new javax.swing.JCheckBox();
        compilerDesign = new javax.swing.JCheckBox();
        unix = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        Status = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Attendance Calculator");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        management.setText("M & E");
        management.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managementActionPerformed(evt);
            }
        });

        operationalResearch.setText("Operational Research");
        operationalResearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operationalResearchActionPerformed(evt);
            }
        });

        computerNetworks.setText("Computer Networks II");
        computerNetworks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computerNetworksActionPerformed(evt);
            }
        });

        computerGraphics.setText("Compute Graphics");
        computerGraphics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computerGraphicsActionPerformed(evt);
            }
        });

        compilerDesign.setText("Compiler Design");
        compilerDesign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compilerDesignActionPerformed(evt);
            }
        });

        unix.setText("Unix");
        unix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unixActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(management)
                    .addComponent(computerNetworks)
                    .addComponent(compilerDesign)
                    .addComponent(operationalResearch)
                    .addComponent(unix)
                    .addComponent(computerGraphics))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(computerGraphics)
                .addGap(18, 18, 18)
                .addComponent(unix)
                .addGap(18, 18, 18)
                .addComponent(operationalResearch)
                .addGap(18, 18, 18)
                .addComponent(compilerDesign)
                .addGap(18, 18, 18)
                .addComponent(computerNetworks)
                .addGap(18, 18, 18)
                .addComponent(management)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Microsoft PhagsPa", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 255));
        jLabel1.setText("Present Today");

        Status.setText("View New Status");
        Status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(Status)
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Status)
                        .addGap(70, 70, 70))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void compilerDesignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compilerDesignActionPerformed
        // TODO add your handling code here:
                try {
            
        Calendar cal = Calendar.getInstance();
        cal.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String date = sdf.format(cal.getTime());
        int yes=1;
        int no = 0;
        String[] strDays = new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thusday","Friday","Saturday" };
        String day = strDays[cal.get(Calendar.DAY_OF_WEEK) - 1];
        String sql = "Insert into CD (Date,Day,Present,Absent) values (?,?,?,?)";

            pst = conn.prepareStatement(sql);
            pst.setString(1, date);//4 value taken as input
            pst.setString(2, day);
            pst.setString(3, "1");
            pst.setString(4, "0");
            pst.execute();
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_compilerDesignActionPerformed

    private void computerGraphicsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computerGraphicsActionPerformed
        // TODO add your handling code here:
        try {
            
        Calendar cal = Calendar.getInstance();
        cal.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String date = sdf.format(cal.getTime());
        int yes=1;
        int no = 0;
        String[] strDays = new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thusday","Friday","Saturday" };
        String day = strDays[cal.get(Calendar.DAY_OF_WEEK) - 1];
        String sql = "Insert into CG (Date,Day,Present,Absent) values (?,?,?,?)";

            pst = conn.prepareStatement(sql);
            pst.setString(1, date);//4 value taken as input
            pst.setString(2, day);
            pst.setString(3, "1");
            pst.setString(4, "0");
            pst.execute();
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        
        
    }//GEN-LAST:event_computerGraphicsActionPerformed

    private void unixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unixActionPerformed
        // TODO add your handling code here:
                try {
            
        Calendar cal = Calendar.getInstance();
        cal.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String date = sdf.format(cal.getTime());
        int yes=1;
        int no = 0;
        String[] strDays = new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thusday","Friday","Saturday" };
        String day = strDays[cal.get(Calendar.DAY_OF_WEEK) - 1];
        String sql = "Insert into UNIX (Date,Day,Present,Absent) values (?,?,?,?)";

            pst = conn.prepareStatement(sql);
            pst.setString(1, date);//4 value taken as input
            pst.setString(2, day);
            pst.setString(3, "1");
            pst.setString(4, "0");
            pst.execute();
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_unixActionPerformed

    private void operationalResearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operationalResearchActionPerformed
        // TODO add your handling code here:
                try {
            
        Calendar cal = Calendar.getInstance();
        cal.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String date = sdf.format(cal.getTime());
        int yes=1;
        int no = 0;
        String[] strDays = new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thusday","Friday","Saturday" };
        String day = strDays[cal.get(Calendar.DAY_OF_WEEK) - 1];
        String sql = "Insert into ORL (Date,Day,Present,Absent) values (?,?,?,?)";

            pst = conn.prepareStatement(sql);
            pst.setString(1, date);//4 value taken as input
            pst.setString(2, day);
            pst.setString(3, "1");
            pst.setString(4, "0");
            pst.execute();
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
    }//GEN-LAST:event_operationalResearchActionPerformed

    private void computerNetworksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computerNetworksActionPerformed
        // TODO add your handling code here:
                try {
            
        Calendar cal = Calendar.getInstance();
        cal.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String date = sdf.format(cal.getTime());
        int yes=1;
        int no = 0;
        String[] strDays = new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thusday","Friday","Saturday" };
        String day = strDays[cal.get(Calendar.DAY_OF_WEEK) - 1];
        String sql = "Insert into CN (Date,Day,Present,Absent) values (?,?,?,?)";

            pst = conn.prepareStatement(sql);
            pst.setString(1, date);//4 value taken as input
            pst.setString(2, day);
            pst.setString(3, "1");
            pst.setString(4, "0");
            pst.execute();
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_computerNetworksActionPerformed

    private void managementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_managementActionPerformed
        // TODO add your handling code here:
                try {
            
        Calendar cal = Calendar.getInstance();
        cal.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String date = sdf.format(cal.getTime());
        int yes=1;
        int no = 0;
        String[] strDays = new String[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thusday","Friday","Saturday" };
        String day = strDays[cal.get(Calendar.DAY_OF_WEEK) - 1];
        String sql = "Insert into Management (Date,Day,Present,Absent) values (?,?,?,?)";

            pst = conn.prepareStatement(sql);
            pst.setString(1, date);//4 value taken as input
            pst.setString(2, day);
            pst.setString(3, "1");
            pst.setString(4, "0");
            pst.execute();
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_managementActionPerformed

    private void StatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusActionPerformed
        // TODO add your handling code here:
        Table t = new Table();
        t.setVisible(true);
        close();
    }//GEN-LAST:event_StatusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Upgrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Upgrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Upgrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Upgrade.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Upgrade().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Status;
    private javax.swing.JCheckBox compilerDesign;
    private javax.swing.JCheckBox computerGraphics;
    private javax.swing.JCheckBox computerNetworks;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox management;
    private javax.swing.JCheckBox operationalResearch;
    private javax.swing.JCheckBox unix;
    // End of variables declaration//GEN-END:variables


}
